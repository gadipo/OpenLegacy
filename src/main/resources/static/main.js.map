{"version":3,"sources":["./src/app/services/admin.service.ts","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/services/login.service.ts","./src/app/components/not-found/not-found.component.ts","./src/app/components/not-found/not-found.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/withdraw-deposit/withdraw-deposit.component.ts","./src/app/components/withdraw-deposit/withdraw-deposit.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/app.module.ts","./src/app/components/admin/admin.component.ts","./src/app/components/admin/admin.component.html","./src/app/error-handler.interceptor.ts","./src/app/components/toolbar/toolbar.component.html","./src/app/components/toolbar/toolbar.component.ts","./src/app/models/item.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Item } from '../models/item';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  constructor(private client: HttpClient) { }\n\n  addItem(item: Item) {\n    console.log(item);\n    return this.client.post(\"http://localhost:8080/admin/addItem/\" + sessionStorage.getItem('userId'), item, { responseType: 'text' });\n  }\n\n  depositItems(itemNo: number, amountToDeposit: number) {\n    return this.client.put(\"http://localhost:8080/admin/depositItems/\" + itemNo + \"/\" + amountToDeposit + \"/\" + sessionStorage.getItem('userId'), null, { responseType: 'text' });\n  }\n\n  deleteItem(itemNo: number) {\n    return this.client.delete(\"http://localhost:8080/admin/deleteItem/\" + itemNo + \"/\" + sessionStorage.getItem('userId'), { responseType: 'text' });\n  }\n\n  getAllItems() {\n    return this.client.get<Item[]>(\"http://localhost:8080/admin/getAllItems/\" + sessionStorage.getItem('userId'));\n  }\n\n  getItemByNo(itemNo: number) {\n    return this.client.get<Item>(\"http://localhost:8080/admin/getItemByNo/\" + itemNo + \"/\" + sessionStorage.getItem('userId'));\n  }\n\n  withdrawItems(itemNo: number, amountToWithdraw: number) {\n    return this.client.put(\"http://localhost:8080/admin/withdrawItems/\" + itemNo + \"/\" + amountToWithdraw + \"/\" + sessionStorage.getItem('userId'), null, { responseType: 'text' });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { LoginComponent } from '../login/login.component';\n\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  \n\n  constructor(private router:Router, private dialog:MatDialog) {\n    this.router = router;\n    this.dialog = dialog;\n}\nngOnInit() {\n}\ngoToLogin() {\n    this.router.navigate(['login']);\n}\nopenLoginDialog() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.maxHeight = '800px';\n    dialogConfig.maxWidth = '600px';\n    dialogConfig.restoreFocus = true;\n    dialogConfig.autoFocus = true;\n    const dialogRef = this.dialog.open(LoginComponent, dialogConfig);\n}\n\n\n\n}\n","\n<div class=\"front\">\n    <p>\n        *A Gad Polivoy Designed Web Page\n    </p>\n    <button mat-raised-button (click)=\"openLoginDialog()\">Login</button>\n</div>\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  token: string = sessionStorage.getItem('userId');\n\n  // a simple verfication of the token in order to display/hide logout button\n  loggedIn: boolean = this.token != null && this.token.length > 10;\n\n  constructor(private client: HttpClient) { }\n\n  login(email: string, password: string) {\n    return this.client.get(\"http://localhost:8080/login/\" + email + \"/\" + password + \"/\", { responseType: 'text' });\n  }\n\n  logout() {\n    return this.client.get(\"http://localhost:8080/login/logout/\" + this.token, { responseType: 'text' });\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <img src=\"./assets/404.jpg\" alt=\"wtf\">\n</div>","import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'openLegacyFront';\n}\n","<div>\n  <app-toolbar></app-toolbar>\n<main>\n<router-outlet></router-outlet>\n</main>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { inject } from '@angular/core/testing';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Item } from 'src/app/models/item';\nimport { AdminService } from 'src/app/services/admin.service';\n\n@Component({\n  selector: 'app-withdraw-deposit',\n  templateUrl: './withdraw-deposit.component.html',\n  styleUrls: ['./withdraw-deposit.component.scss']\n})\nexport class WithdrawDepositComponent implements OnInit {\n\n  item:Item;\n\n  withdrawForm:FormGroup;\n  depositForm:FormGroup;\n\n  messageForUser:string;\n\n  constructor(private dialogRef:MatDialogRef<WithdrawDepositComponent>,\n    @Inject(MAT_DIALOG_DATA) data, private fb:FormBuilder,private service:AdminService,private snack:MatSnackBar) {this.item = data.dataToSend }\n\n  ngOnInit(): void {\n    this.withdrawForm = this.fb.group({\n      amountToWithdraw:['',Validators.required]\n    })\n    this.depositForm =this.fb.group({\n      amountToDeposit:['',[Validators.required]],\n    })\n  }\n\n  withdraw(){\n    console.log(this.item);\n    this.service.withdrawItems(this.item.itemNo,this.withdrawForm.controls['amountToWithdraw'].value).subscribe((res)=>{\n      this.messageForUser =res;\n      this.showSnack();\n      this.dialogRef.close();\n    }, (err)=> {\n      alert(err.error); \n    });\n  } \n  \n  deposit(){\n    this.service.depositItems(this.item.itemNo,this.depositForm.controls['amountToDeposit'].value).subscribe((res)=>{\n      this.messageForUser =res;\n      this.showSnack();\n      this.dialogRef.close();\n    }, (err)=> {\n      alert(err.error); \n    });\n  }\n\n  showSnack() {\n    let snackRef = this.snack.open(this.messageForUser, \"close\", { duration: 2000 });\n    snackRef.onAction().subscribe(() => {\n      this.snack.dismiss();\n    })\n  }\n\n}\n","<div>\n    <h2>Withdraw / Deposit - {{item.title}}</h2>\n    <span>Current Amount: {{item.amount}}</span><br><br>\n    <mat-tab-group>\n        <mat-tab label= \"withdraw\"><br>\n            <form [formGroup]=\"withdrawForm\" >\n                <mat-form-field appearance =\"outline\">\n                    <mat-label>Amount to Withdraw</mat-label>\n                    <input type=\"number\" matInput formControlName=\"amountToWithdraw\" required>\n                    <mat-error>Amount to Withdraw is required !</mat-error>\n                </mat-form-field><br>\n                <button mat-raised-button type=\"submit\" [disabled]=\"!withdrawForm.valid\" (click)=\"withdraw()\">Withdarw</button>\n                </form>\n        </mat-tab>\n        <mat-tab label=\"deposit\"><br>\n            <form [formGroup]=\"depositForm\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Amount to Deposit</mat-label>\n                <input type=\"number\" matInput formControlName=\"amountToDeposit\" required>\n                <mat-error>Amount to Deposit is required !</mat-error>\n            </mat-form-field><br>\n            <button mat-raised-button type=\"submit\" [disabled]=\"!depositForm.valid\" (click)=\"deposit()\">Deposit</button>\n            <br><br>\n        </form>\n        </mat-tab>\n    </mat-tab-group>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private fb: FormBuilder,  private service: LoginService,\n    private router: Router, private dialogRef: MatDialogRef<LoginComponent>) { }\n\n  loginForm: FormGroup;\n\n  errorMessage: string;\n\n  hide = true;\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  public login() {\n    this.service.login(this.loginForm.controls['email'].value, this.loginForm.controls['password'].value).subscribe((token) => {\n        sessionStorage.setItem('userId', token);\n        this.service.loggedIn = true;\n            this.router.navigate([\"admin\"]);\n            this.dialogRef.close();\n        }\n      , (err) => {\n        this.errorMessage = err.error;\n        console.log(err.error);\n      });\n  }\n\n  logout() {\n    this.service.logout().subscribe((res) => {\n      sessionStorage.removeItem('userId');\n      this.service.loggedIn = false;\n      alert(res);\n      this.router.navigate([\"main\"]);\n    }, (err) => {\n      alert(err.error);\n    })\n  };\n\n}\n","<div>\n    <h1>Login</h1>\n    <form [formGroup]=\"loginForm\" >\n        <mat-form-field appearance =\"outline\">\n            <mat-label>Email</mat-label>\n            <input type=\"text\" matInput formControlName=\"email\" required>\n            <mat-error *ngIf=\"loginForm.controls['email'].errors?.required\">Email is required !</mat-error>\n            <mat-error *ngIf=\"loginForm.controls['email'].errors?.email\">Email is not legit !</mat-error>\n        </mat-form-field><br><br>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Password</mat-label>\n            <input [type]=\"hide ? 'password' : 'text'\" matInput formControlName=\"password\" required>\n            <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n            </button>\n            <mat-error>Password is required !</mat-error>\n        </mat-form-field><br><br>\n        <span>{{errorMessage}}</span><br><br>\n        <button mat-raised-button [disabled]=\"!loginForm.valid\" (click)=\"login()\">Login</button>\n        <br><br>\n    </form>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { ReactiveFormsModule} from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { WithdrawDepositComponent } from './components/withdraw-deposit/withdraw-deposit.component';\nimport { ErrorHandlerInterceptor } from './error-handler.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AdminComponent,\n    LoginComponent,\n    NotFoundComponent,\n    ToolbarComponent,\n    HomeComponent,\n    WithdrawDepositComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatSliderModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatBadgeModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    FormsModule,\n    MatTabsModule,\n  ],\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: ErrorHandlerInterceptor, multi: true }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Item } from 'src/app/models/item';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { WithdrawDepositComponent } from '../withdraw-deposit/withdraw-deposit.component';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(private service: AdminService, private fb: FormBuilder, private snack: MatSnackBar, private dialog:MatDialog) { }\n\n  items:Item[];\n\n  addItemForm: FormGroup;\n  searchItemForm: FormGroup;\n\n  messageForUser: string;\n\n\n  ngOnInit(): void {\n    this.addItemForm = this.fb.group({\n      amount: ['', Validators.required],\n      title: ['', [Validators.required]],\n      inventoryCode: ['', Validators.required]\n    });\n\n    this.searchItemForm = this.fb.group({\n      itemNo: [''],\n      inventoryCode: ['']\n    });\n   \n  }\n\n  searchItems() {\n    if (this.searchItemForm.controls['itemNo'].value == ''||this.searchItemForm.controls['inventoryCode'].value ==null) {\n      this.service.getAllItems().subscribe((comps) => {\n        this.items = comps;\n        console.log(this.items);\n        this.messageForUser = null;\n      }, (err) => {\n        console.log(err);\n        this.messageForUser = err.error;\n      });\n    } else {\n      this.service.getItemByNo(this.searchItemForm.controls['itemNo'].value).subscribe((res) => {\n        this.items = new Array(1);\n        this.items[0] = res;\n        this.messageForUser = null;\n      }, (err) => {\n        this.messageForUser = err.error;\n        alert(err.error);\n      })\n\n    }\n  }\n\n  withdrawDeposit(item:Item) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.restoreFocus = true;\n    dialogConfig.data = {\n      dataToSend: item\n    };\n    const dialogRef = this.dialog.open(WithdrawDepositComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((data) => {\n      if (data == undefined)\n        return;\n      item = data;\n      console.log(data);\n      console.log(item);\n    })\n  }\n\n  deleteItem(item:Item) {\n    this.service.deleteItem(item.itemNo).subscribe((res) => {\n      this.messageForUser = res;\n      this.showSnack();\n      this.items.splice(this.items.indexOf(item), 1);\n    }, (err) => {\n      this.messageForUser = err.error;\n      alert(err.error);\n    });\n  }\n\n\n  addItem() {\n    let p = new Item(0, this.addItemForm.controls['title'].value, this.addItemForm.controls['amount'].value,\n      this.addItemForm.controls['inventoryCode'].value)\n      console.log(p);\n    this.service.addItem(p).subscribe((res) => {\n      this.messageForUser = res;\n      this.showSnack();\n      this.formReset(this.addItemForm);\n    }, (err) => {\n      this.messageForUser = err.error;\n      console.log(err);\n      alert(err.error);\n    });\n  }\n\n  showSnack() {\n    let snackRef = this.snack.open(this.messageForUser, \"close\", { duration: 2000 });\n    snackRef.onAction().subscribe(() => {\n      this.snack.dismiss();\n    })\n  }\n\n  formReset(form: FormGroup) {\n\n    form.reset();\n\n    Object.keys(form.controls).forEach(key => {\n      form.get(key).setErrors(null) ;\n    });\n}\n}\n","<div class=\"grid-container\">\n    <mat-tab-group>\n        <mat-tab label=\"Search\">\n            <form action=\"POST\" [formGroup]=\"searchItemForm\">\n                <button mat-raised-button (click)=\"searchItems()\"\n                    [disabled]=\"!searchItemForm.valid\">Search</button>\n                <mat-form-field>\n                    <mat-label>Item No</mat-label>\n                    <input type=\"number\" matInput formControlName=\"itemNo\">\n                    <button *ngIf=\"searchItemForm.controls['itemNo'].value\" matSuffix mat-icon-button\n                        aria-label=\"Clear\" (click)=\"searchItemForm.reset()\">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                </mat-form-field>\n            </form><br>\n            <table>\n                <tr>\n                    <th>Item No</th>\n                    <th>Title</th>\n                    <th>Amount</th>\n                    <th>Inventory Code</th>\n                </tr>\n                <tr *ngFor=\"let p of items\">\n                    <td>{{p.itemNo}}</td>\n                    <td>\n                        <span>{{p.title}}</span>\n                    </td>\n                    <td>\n                        <span>{{p.amount}}</span>\n                    </td>\n                    <td>\n                        {{p.inventoryCode}}\n                    </td>\n                    <button mat-raised-button (click)=\"withdrawDeposit(p)\">Deposit/Withdraw</button>\n                    <button mat-raised-button (click)=\"deleteItem(p)\">\n                        <mat-icon>delete_outline</mat-icon>\n                    </button>\n                </tr>\n            </table><br>\n        </mat-tab>\n        <mat-tab label=\"Add\">\n            <form [formGroup]=\"addItemForm\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Title</mat-label>\n                    <input type=\"text\" matInput formControlName=\"title\" required>\n                    <mat-error>Title is required !</mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Amount</mat-label>\n                    <input type=\"number\" matInput formControlName=\"amount\" required>\n                    <mat-error>Amount is required !</mat-error>\n                </mat-form-field><br>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Inventory Code</mat-label>\n                    <input type=\"text\" matInput formControlName=\"inventoryCode\" required>\n                    <mat-error>inventoryCode is required !</mat-error>\n                </mat-form-field><br>\n                <button mat-raised-button type=\"submit\" [disabled]=\"!addItemForm.valid\" (click)=\"addItem()\">Add\n                    Item</button>\n                <br><br>\n            </form>\n        </mat-tab>\n    </mat-tab-group>\n    </div>","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError} from 'rxjs/operators';\nimport { LoginService } from './services/login.service';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n\n  constructor(private service:LoginService, private router:Router) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return next.handle(request)\n    .pipe(\n      retry(0),\n      catchError((error:HttpErrorResponse)=>{\n        if ( error.status === 504 || error.error == \"Session Expired !\"||error.error == \"You have to login hombre !\") {\n          let errorMessage = `You are not logged in ! \\n redirecting to home...`;\n          this.service.loggedIn = false;\n          sessionStorage.removeItem('userId');\n          this.router.navigate(['main']);\n          alert(errorMessage);\n        }else {\n          return throwError(error);\n        }\n      })\n    );\n  }\n}\n","<div>\n    <mat-toolbar color=\"primary\">\n      \n       <span class=\"toolbar-fill\">Open Legacy Stock Management</span>\n      \n<button matTooltip=\"Logout\" *ngIf=\"loginService.loggedIn==true\" (click)=\"logout()\">\n    <mat-icon>exit_to_app</mat-icon>\n  </button>\n  </mat-toolbar>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent implements OnInit {\n\n  \n  constructor(public loginService:LoginService, private router:Router) { }\n  \n  ngOnInit(): void {\n    console.log(this.loginService)\n  }\n\n  logout(){\n    this.loginService.logout().subscribe((res)=>{\n      sessionStorage.removeItem('userId');\n      this.loginService.loggedIn = false;\n      alert(res);\n      this.router.navigate([\"main\"]);\n    },(err)=>{\n      alert(err.error);\n    })\n  };\n\n}\n","export class Item {\n\n    constructor(\n        public itemNo :number,\n        public title : string,\n        public amount : number,\n        public inventoryCode : string,\n        ){}\n        \n        \n        public get _inventoryCode() : string {\n            return this.inventoryCode;\n         } \n        public set _inventoryCode(inventoryCode : string) {\n            this.inventoryCode = inventoryCode;\n        }\n        \n        public get _amount() : number {\n            return this.amount;\n        }\n        public set _amount(amount : number) {\n            this.amount = amount;\n        }\n        \n        public get _title() : string {\n            return this.title;\n        }\n        public set _title(title : string) {\n            this.title = title;\n        }\n        \n        public get _itemNo() :number {\n            return this.itemNo;\n        }\n        public set _itemNo(itemNo :number) {\n            this.itemNo = itemNo;\n        }\n        \n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\n\nconst routes: Routes = [\n  { path: \"main\", component: HomeComponent},\n{ path: \"admin\", component: AdminComponent },\n{ path: \"\", redirectTo: \"main\", pathMatch: \"full\" },\n{ path: \"**\", component: NotFoundComponent}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}